(function(modules){var installedModules={};function __webpack_require__(moduleId){if(installedModules[moduleId]){return installedModules[moduleId].exports;}
var module=installedModules[moduleId]={i:moduleId,l:false,exports:{}};modules[moduleId].call(module.exports,module,module.exports,__webpack_require__);module.l=true;return module.exports;}
__webpack_require__.m=modules;__webpack_require__.c=installedModules;__webpack_require__.d=function(exports,name,getter){if(!__webpack_require__.o(exports,name)){Object.defineProperty(exports,name,{enumerable:true,get:getter});}};__webpack_require__.r=function(exports){if(typeof Symbol!=='undefined'&&Symbol.toStringTag){Object.defineProperty(exports,Symbol.toStringTag,{value:'Module'});}
Object.defineProperty(exports,'__esModule',{value:true});};__webpack_require__.t=function(value,mode){if(mode&1)value=__webpack_require__(value);if(mode&8)return value;if((mode&4)&&typeof value==='object'&&value&&value.__esModule)return value;var ns=Object.create(null);__webpack_require__.r(ns);Object.defineProperty(ns,'default',{enumerable:true,value:value});if(mode&2&&typeof value!='string')
for(var key in value)__webpack_require__.d(ns,key,function(key){return value[key];}.bind(null,key));return ns;};__webpack_require__.n=function(module){var getter=module&&module.__esModule?function getDefault(){return module['default'];}:function getModuleExports(){return module;};__webpack_require__.d(getter,'a',getter);return getter;};__webpack_require__.o=function(object,property){return Object.prototype.hasOwnProperty.call(object,property);};__webpack_require__.p="";return __webpack_require__(__webpack_require__.s=0);})
([(function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);function decodeText(array){if(typeof TextDecoder!=='undefined'){return new TextDecoder().decode(array);}
var s='';for(var i=0,il=array.length;i<il;i++){s+=String.fromCharCode(array[i]);}
return decodeURIComponent(escape(s));}
function extractUrlBase(url){var index=url.lastIndexOf('/');if(index===-1)return './';return url.substr(0,index+1);}
var BinaryReader_BinaryReader=function(){function BinaryReader(buffer,littleEndian){this.dv=new DataView(buffer);this.offset=0;this.littleEndian=littleEndian!==undefined?littleEndian:true;}
var _proto=BinaryReader.prototype;_proto.getOffset=function getOffset(){return this.offset;};_proto.size=function size(){return this.dv.buffer.byteLength;};_proto.skip=function skip(length){this.offset+=length;};_proto.getBoolean=function getBoolean(){return(this.getUint8()&1)===1;};_proto.getBooleanArray=function getBooleanArray(size){var a=[];for(var i=0;i<size;i++){a.push(this.getBoolean());}
return a;};_proto.getUint8=function getUint8(){var value=this.dv.getUint8(this.offset);this.offset+=1;return value;};_proto.getInt16=function getInt16(){var value=this.dv.getInt16(this.offset,this.littleEndian);this.offset+=2;return value;};_proto.getInt32=function getInt32(){var value=this.dv.getInt32(this.offset,this.littleEndian);this.offset+=4;return value;};_proto.getInt32Array=function getInt32Array(size){var a=[];for(var i=0;i<size;i++){a.push(this.getInt32());}
return a;};_proto.getUint32=function getUint32(){var value=this.dv.getUint32(this.offset,this.littleEndian);this.offset+=4;return value;};_proto.getInt64=function getInt64(){var low,high;if(this.littleEndian){low=this.getUint32();high=this.getUint32();}else{high=this.getUint32();low=this.getUint32();}
if(high&0x80000000){high=~high&0xFFFFFFFF;low=~low&0xFFFFFFFF;if(low===0xFFFFFFFF)high=high+1&0xFFFFFFFF;low=low+1&0xFFFFFFFF;return-(high*0x100000000+low);}
return high*0x100000000+low;};_proto.getInt64Array=function getInt64Array(size){var a=[];for(var i=0;i<size;i++){a.push(this.getInt64());}
return a;};_proto.getUint64=function getUint64(){var low,high;if(this.littleEndian){low=this.getUint32();high=this.getUint32();}else{high=this.getUint32();low=this.getUint32();}
var res=high*0x100000000+low;if(Math.abs(res)>Number.MAX_SAFE_INTEGER){console.log("Not safe");}
return high*0x100000000+low;};_proto.getFloat32=function getFloat32(){var value=this.dv.getFloat32(this.offset,this.littleEndian);this.offset+=4;return value;};_proto.getFloat32Array=function getFloat32Array(size){var a=[];for(var i=0;i<size;i++){a.push(this.getFloat32());}
return a;};_proto.getFloat64=function getFloat64(){var value=this.dv.getFloat64(this.offset,this.littleEndian);this.offset+=8;return value;};_proto.getFloat64Array=function getFloat64Array(size){var a=[];for(var i=0;i<size;i++){a.push(this.getFloat64());}
return a;};_proto.getArrayBuffer=function getArrayBuffer(size){var value=this.dv.buffer.slice(this.offset,this.offset+size);this.offset+=size;return value;};_proto.getString=function getString(size){var a=[];for(var i=0;i<size;i++){a[i]=this.getUint8();}
var nullByte=a.indexOf(0);if(nullByte>=0)a=a.slice(0,nullByte);return decodeText(new Uint8Array(a));};return BinaryReader;}();var FBXTree=function(){function FBXTree(){}
var _proto=FBXTree.prototype;_proto.add=function add(key,val){this[key]=val;};return FBXTree;}();var BinaryParser_BinaryParser=function(){function BinaryParser(context){this.context=context;}
var _proto=BinaryParser.prototype;_proto.parse=function parse(buffer){var reader=new BinaryReader_BinaryReader(buffer);reader.skip(23);var version=reader.getUint32();var allNodes=new FBXTree();while(!this.endOfContent(reader)){var node=this.parseNode(reader,version);if(node!==null)allNodes.add(node.name,node);}
return allNodes;};_proto.endOfContent=function endOfContent(reader){if(reader.size()%16===0){return(reader.getOffset()+160+16&~0xf)>=reader.size();}else{return reader.getOffset()+160+16>=reader.size();}};_proto.parseNode=function parseNode(reader,version){var node={};var endOffset=version>=7500?reader.getUint64():reader.getUint32();var numProperties=version>=7500?reader.getUint64():reader.getUint32();var propertyListLen=version>=7500?reader.getUint64():reader.getUint32();var nameLen=reader.getUint8();var name=reader.getString(nameLen);if(endOffset===0)return null;var propertyList=[];for(var i=0;i<numProperties;i++){propertyList.push(this.parseProperty(reader));}
var id=propertyList.length>0?propertyList[0]:'';var attrName=propertyList.length>1?propertyList[1]:'';var attrType=propertyList.length>2?propertyList[2]:'';node.singleProperty=numProperties===1&&reader.getOffset()===endOffset?true:false;while(endOffset>reader.getOffset()){var subNode=this.parseNode(reader,version);if(subNode!==null)this.parseSubNode(name,node,subNode);}
node.propertyList=propertyList;if(typeof id==='number')node.id=id;if(attrName!=='')node.attrName=attrName;if(attrType!=='')node.attrType=attrType;if(name!=='')node.name=name;return node;};_proto.parseSubNode=function parseSubNode(name,node,subNode){if(subNode.singleProperty===true){var value=subNode.propertyList[0];if(Array.isArray(value)){node[subNode.name]=subNode;subNode.a=value;}else{node[subNode.name]=value;}}else if(name==='Connections'&&subNode.name==='C'){var array=[];subNode.propertyList.forEach(function(property,i){if(i!==0)array.push(property);});if(node.connections===undefined){node.connections=[];}
node.connections.push(array);}else if(subNode.name==='Properties70'){var keys=Object.keys(subNode);keys.forEach(function(key){node[key]=subNode[key];});}else if(name==='Properties70'&&subNode.name==='P'){var innerPropName=subNode.propertyList[0];var innerPropType1=subNode.propertyList[1];var innerPropType2=subNode.propertyList[2];var innerPropFlag=subNode.propertyList[3];var innerPropValue;if(innerPropName.indexOf('Lcl ')===0)innerPropName=innerPropName.replace('Lcl ','Lcl_');if(innerPropType1.indexOf('Lcl ')===0)innerPropType1=innerPropType1.replace('Lcl ','Lcl_');if(innerPropType1==='Color'||innerPropType1==='ColorRGB'||innerPropType1==='Vector'||innerPropType1==='Vector3D'||innerPropType1.indexOf('Lcl_')===0){innerPropValue=[subNode.propertyList[4],subNode.propertyList[5],subNode.propertyList[6]];}else{innerPropValue=subNode.propertyList[4];}
node[innerPropName]={'type':innerPropType1,'type2':innerPropType2,'flag':innerPropFlag,'value':innerPropValue};}else if(node[subNode.name]===undefined){if(typeof subNode.id==='number'){node[subNode.name]={};node[subNode.name][subNode.id]=subNode;}else{node[subNode.name]=subNode;}}else{if(subNode.name==='PoseNode'){if(!Array.isArray(node[subNode.name])){node[subNode.name]=[node[subNode.name]];}
node[subNode.name].push(subNode);}else if(node[subNode.name][subNode.id]===undefined){node[subNode.name][subNode.id]=subNode;}}};_proto.parseProperty=function parseProperty(reader){var type=reader.getString(1);var length=0;switch(type){case 'C':return reader.getBoolean();case 'D':return reader.getFloat64();case 'F':return reader.getFloat32();case 'I':return reader.getInt32();case 'L':return reader.getInt64();case 'R':length=reader.getUint32();return reader.getArrayBuffer(length);case 'S':length=reader.getUint32();return reader.getString(length);case 'Y':return reader.getInt16();case 'b':case 'c':case 'd':case 'f':case 'i':case 'l':var arrayLength=reader.getUint32();var encoding=reader.getUint32();var compressedLength=reader.getUint32();if(encoding===0){switch(type){case 'b':case 'c':return reader.getBooleanArray(arrayLength);case 'd':return reader.getFloat64Array(arrayLength);case 'f':return reader.getFloat32Array(arrayLength);case 'i':return reader.getInt32Array(arrayLength);case 'l':return reader.getInt64Array(arrayLength);}}
if(typeof Zlib==='undefined'){console.error('THREE.FBXLoader: External library Inflate.min.js required, obtain or import from https://github.com/imaya/zlib.js');}
var inflate=new Zlib.Inflate(new Uint8Array(reader.getArrayBuffer(compressedLength)));var reader2=new BinaryReader_BinaryReader(inflate.decompress().buffer);switch(type){case 'b':case 'c':return reader2.getBooleanArray(arrayLength);case 'd':return reader2.getFloat64Array(arrayLength);case 'f':return reader2.getFloat32Array(arrayLength);case 'i':return reader2.getInt32Array(arrayLength);case 'l':return reader2.getInt64Array(arrayLength);}
default:throw new Error('THREE.FBXLoader: Unknown property type '+type);}};return BinaryParser;}();importScripts('../inflate.min.js');function fbx_worker_parse(buffer,id){var fbxTree=new BinaryParser_BinaryParser({}).parse(buffer);return{id:id,fbxTree:fbxTree};}
onmessage=function onmessage(e){if(e.data['parse']){var res=fbx_worker_parse(e.data['parse'],e.data.id);postMessage(res);}};})]);